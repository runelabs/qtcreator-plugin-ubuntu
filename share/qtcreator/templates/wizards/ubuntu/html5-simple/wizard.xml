<?xml version="1.0" encoding="UTF-8"?>
<wizard version="1" kind="project" firstpage="10" id="UbuntuAppSimpleHtml5'" category="A.UbuntuProject"
        platformIndependent="true" 
        class="ubuntu-project-plain-html"
				featuresRequired=""
        >
    <icon>../share/ubuntu.png</icon>
    <description>Template for creating a native HTML5 app Native HTML5 apps have unrestricted access to Platform APIs. This project contains only HTML/CSS and Javascript code. 

The UI is designed for a mobile form-factor and uses the Ubuntu Touch design building blocks.

Unlike the default Qt HTML5 template, there is no C++ code or compilation necessary for this application type</description>
    <displayname>HTML5 App</displayname>
    <displaycategory>Ubuntu</displaycategory>
    <files>
	<file source="displayName.ubuntuhtmlproject" target="%ProjectName%.ubuntuhtmlproject" openproject="true"/>
	<file source="www/js/ui.js"  			   target="www/js/ui.js" openeditor="false"/>
	<file source="www/js/application.js"  			   target="www/js/application.js" openeditor="false"/>
	<file source="www/css/app.css"  			   target="www/css/app.css" openeditor="false"/>
	<file source="www/img/cordova.png"  			   target="www/img/cordova.png" openeditor="false" binary="true"/>

        <file source="displayName.png"   		   target="%ProjectName%.png" openeditor="false" binary="true"/>
	<file source="displayName.desktop"     target="%ClickHookName%.desktop" openeditor="false"/>
	<file source="../share/manifest.json"   						target="manifest.json" openeditor="true"/>
      	<file source="www/index.html" 			   target="www/index.html" openeditor="true"/>
        <file source="displayName.apparmor"                     target="%ClickHookName%.apparmor" openeditor="false"/>
        <file source="../share/.excludes"                     target=".excludes" openeditor="false"/>

    	<file source="README"  			   target="README" openeditor="false"/>
    	<file source="Gruntfile.js"                target="Gruntfile.js" openeditor="false"/>
    	<file source="package.json"  			   target="package.json" openeditor="false"/>

	<file source="tests/autopilot/application_tests/__init__.py"  			   target="tests/autopilot/application_tests/__init__.py" openeditor="false"/>
	<file source="tests/autopilot/application_tests/tests/__init__.py"  			   target="tests/autopilot/application_tests/tests/__init__.py" openeditor="false"/>
	<file source="tests/autopilot/application_tests/tests/test_app_launch.py"  			   target="tests/autopilot/application_tests/tests/test_app_launch.py" openeditor="false"/>

	<file source="tests/unit/specs/app-specs.js"  		   target="tests/unit/specs/app-specs.js" openeditor="false"/>
	<file source="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/boot.js"  			   target="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/boot.js" openeditor="false"/>
	<file source="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/console.js"  			   target="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/console.js" openeditor="false"/>
	<file source="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine.js"  			   target="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine.js" openeditor="false"/>
	<file source="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine_favicon.png"  			   target="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine_favicon.png" openeditor="false"/>
	<file source="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine-html.js"  			   target="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine-html.js" openeditor="false"/>
	<file source="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine.js"  			   target="tests/unit/third_party/jasmine/lib/jasmine-2.2.0/jasmine.js" openeditor="false"/>
   </files>

	  <!-- Create a 2nd wizard page with click package parameters -->
		<fieldpagetitle>Click package parameters</fieldpagetitle>
		<fields>
			<field mandatory="true" name="ClickDomain">
			  <fieldcontrol class="QLineEdit" validator='^[A-Za-z0-9-]+$'
			                defaulttext="" placeholdertext="Nickname"/>
			  <fielddescription>Nickname:</fielddescription>
			</field>
			<field mandatory="true" name="ClickMaintainer">
			  <fieldcontrol class="QLineEdit" validator='^[^"]+$'
			                defaulttext="" placeholdertext="Maintainer"/>
			  <fielddescription>Maintainer:</fielddescription>
			</field>
			<field mandatory="true" name="ClickHookName">
			  <fieldcontrol class="QLineEdit" validator='^[^"]+$'
			                defaulttext="%ProjectName%" placeholdertext="app hook name"/>
			  <fielddescription>App name:</fielddescription>
			</field>
		  <field name="ClickFrameworkVersion">
		      <fieldcontrol class="QComboBox" defaultindex="0">
		          <comboentries>
								<!-- Do not add any other frameworks here, they are populated at runtime, this is just a dummy framework to make sure we can find the combobox -->
								<comboentry value="ubuntu-sdk-dummy-framework">
		                <comboentrytext>Dummy Framework</comboentrytext>
		            </comboentry>
		          </comboentries>
		      </fieldcontrol>
		      <fielddescription>Framework:</fielddescription>
		  </field>
		</fields>
    <validationrules>
        <validationrule condition='/^(.*)\s+&lt;(.*@.*)&gt;$/.test("%ClickMaintainer%")'>
            <message>Invalid format for maintainer (should be like "Joe Bloggs &lt;joe.bloggs@isp.com&gt;")</message>
        </validationrule>
    </validationrules>
</wizard>
